---
- name: Configure Node
  hosts: nodes
  become: true
  remote_user: chernots
  vars:
    postgresql_version: "14"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/main"
    ansible_ssh_pipelining: true
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present
        update_cache: yes

    - name: Check if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "{{ postgresql_data_dir }}/pg_hba.conf"
      register: postgres_data

    - name: Empty data dir
      ansible.builtin.file:
        path: "{{ postgresql_data_dir }}"
        state: absent
      when: not postgres_data.stat.exists

    - name: Initialize PostgreSQL
      ansible.builtin.shell: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
      become: true
      become_user: postgres
      when: not postgres_data.stat.exists

    - name: Start and enable service
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Install Python and pip
      apt:
        name:
          - python3
          - python3-pip
        state: present

    - name: Install python3-testresources
      apt:
        name: python3-testresources
        state: present

    - name: Install patroni
      pip:
        name: patroni[etcd]
        state: present

    - name: Install python-etcd
      pip:
        name: python-etcd
        state: present

    - name: Configuring patroni on hosts
      ansible.builtin.template:
         src: templates/patroni-cfg.j2
         dest: /etc/patroni.yml

    - name: Create /data/patroni directory
      file:
        path: /data/patroni
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'

    - name: copy patroni systemd unit
      ansible.builtin.template:
         src: templates/patroni-service.j2
         dest: /etc/systemd/system/patroni.service

    - name: re-Start and enable Patroni service
      ansible.builtin.systemd:
        name: patroni
        state: restarted
        enabled: yes

    - name: Check Patroni service status
      ansible.builtin.systemd:
          name: patroni
          state: started
